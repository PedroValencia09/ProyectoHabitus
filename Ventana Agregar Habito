#/////////////////////////////////////////////////////////////////////////////
# ======================= AGREGAR HÁBITO DESDE EDITOR =======================
def mostrar_agregar_habito():
    ventana_agregar = tk.Toplevel()
    ventana_agregar.title("Agregar hábito")
    ventana_agregar.attributes('-fullscreen', True)
    ventana_agregar.configure(bg=COLOR_FONDO)

    header = tk.Frame(ventana_agregar, bg=COLOR_AZUL_SUAVE, height=100)
    header.pack(fill="x")

    tk.Button(header, text="←", font=("Arial", 20), bg=COLOR_AZUL_SUAVE, relief="flat", command=ventana_agregar.destroy).place(x=20, y=30)
    tk.Label(header, text="Selecciona un hábito para agregar", font=("Arial", 32, "bold"), bg=COLOR_AZUL_SUAVE, fg=COLOR_TEXTO).pack(pady=20)

    cuerpo = tk.Frame(ventana_agregar, bg=COLOR_FONDO)
    cuerpo.pack(pady=40)

    def agregar_habito(nombre):
        if nombre not in habitos_activos:
            habitos_activos.append(nombre)
            mostrar_info_habito(nombre)
            ventana_agregar.destroy()
            # Cerrar ventana "Editor Rutina" si está abierta para refrescarla
            for window in tk._default_root.winfo_children():
                if isinstance(window, tk.Toplevel) and window.title() == "Editor Rutina":
                    window.destroy()
            mostrar_editor_rutina()

    for nombre in ["Caminar", "Leer", "Dormir"]:
        tk.Button(
            cuerpo,
            text=nombre,
            font=("Arial", 20),
            width=20,
            bg=COLOR_VERDE_SUAVE,
            fg=COLOR_TEXTO,
            command=lambda n=nombre: agregar_habito(n)
        ).pack(pady=15)

    ventana_agregar.bind("<Escape>", lambda e: ventana_agregar.attributes("-fullscreen", False))

#/////////////////////////////////////////////////////////////////////////////////
# ======================= VENTANA INFORMACIÓN HÁBITO NUEVO =======================
def mostrar_info_habito(nombre_habito):
    info = habitos_info.get(nombre_habito, {})
    ventana_info = tk.Toplevel()
    ventana_info.title(f"Nivel 1 - {nombre_habito}")
    ventana_info.attributes('-fullscreen', True)
    ventana_info.configure(bg=COLOR_FONDO)

    header = tk.Frame(ventana_info, bg=COLOR_AZUL_SUAVE, height=100)
    header.pack(fill="x")

    tk.Button(header, text="←", font=("Arial", 20), bg=COLOR_AZUL_SUAVE, relief="flat", command=ventana_info.destroy).place(x=20, y=30)
    tk.Label(header, text=f"Nivel 1 - {nombre_habito}", font=("Arial", 32, "bold"), bg=COLOR_AZUL_SUAVE, fg=COLOR_TEXTO).pack(pady=20)

    cuerpo = tk.Frame(ventana_info, bg=COLOR_FONDO)
    cuerpo.pack(pady=60)

    tk.Label(cuerpo, text=f"Tiempo sugerido: {info.get('tiempo', '')}", font=("Arial", 22), bg=COLOR_FONDO, fg=COLOR_TEXTO).pack(pady=10)
    tk.Label(cuerpo, text=f"Días recomendados: {info.get('dias', '')}", font=("Arial", 22), bg=COLOR_FONDO, fg=COLOR_TEXTO).pack(pady=10)
    tk.Label(cuerpo, text=info.get('descripcion', ''), font=("Arial", 18), wraplength=800, justify="center", bg=COLOR_FONDO, fg=COLOR_TEXTO).pack(pady=20)

    tk.Button(
        cuerpo,
        text="Aceptar",
        font=("Arial", 18, "bold"),
        bg=COLOR_VERDE_SUAVE,
        fg=COLOR_TEXTO,
        width=15,
        height=2,
        command=ventana_info.destroy
    ).pack(pady=30)

    ventana_info.bind("<Escape>", lambda e: ventana_info.attributes("-fullscreen", False))

