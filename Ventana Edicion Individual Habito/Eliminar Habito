#//////////////////////////////////////////////////////////////////////////
# ======================= VENTANA EDICIÓN DE HÁBITO =======================
def mostrar_edicion_habito(nombre_habito):
    ventana = tk.Toplevel()
    ventana.title(f"Editar hábito: {nombre_habito}")
    ventana.attributes('-fullscreen', True)
    ventana.configure(bg=COLOR_FONDO)

    header = tk.Frame(ventana, bg=COLOR_AZUL_SUAVE, height=100)
    header.pack(fill="x")

    tk.Button(header, text="←", font=("Arial", 20), bg=COLOR_AZUL_SUAVE, relief="flat", command=ventana.destroy).place(x=20, y=30)
    tk.Label(header, text=f"{nombre_habito}", font=("Arial", 32, "bold"), bg=COLOR_AZUL_SUAVE, fg=COLOR_TEXTO).pack(pady=20)

    cuerpo = tk.Frame(ventana, bg=COLOR_FONDO)
    cuerpo.pack(pady=40)

    tk.Label(cuerpo, text="Editar día(s)", font=("Arial", 20), bg=COLOR_FONDO, fg=COLOR_TEXTO).pack(pady=10)
    entry_dias = tk.Entry(cuerpo, font=("Arial", 16), width=30)
    entry_dias.insert(0, habitos_info[nombre_habito]["dias"])
    entry_dias.pack(pady=10)

    tk.Label(cuerpo, text="Editar tiempo", font=("Arial", 20), bg=COLOR_FONDO, fg=COLOR_TEXTO).pack(pady=10)
    entry_tiempo = tk.Entry(cuerpo, font=("Arial", 16), width=30)
    entry_tiempo.insert(0, habitos_info[nombre_habito]["tiempo"])
    entry_tiempo.pack(pady=10)

    def guardar_cambios():
        nuevo_dia = entry_dias.get().strip()
        nuevo_tiempo = entry_tiempo.get().strip()
        if nuevo_dia and nuevo_tiempo:
            habitos_info[nombre_habito]["dias"] = nuevo_dia
            habitos_info[nombre_habito]["tiempo"] = nuevo_tiempo
        ventana.destroy()

    tk.Button(
        cuerpo,
        text="Aceptar",
        font=("Arial", 18, "bold"),
        bg=COLOR_VERDE_SUAVE,
        fg=COLOR_TEXTO,
        width=15,
        height=2,
        command=guardar_cambios
    ).pack(pady=40)

    tk.Button(
        ventana,
        text="Eliminar hábito",
        font=("Arial", 16, "bold"),
        fg="white",
        bg="red",
        relief="raised",
        command=lambda: confirmar_eliminacion_habito(ventana, nombre_habito)
    ).pack(side="bottom", pady=30)

    ventana.bind("<Escape>", lambda e: ventana.attributes("-fullscreen", False))


#/////////////////////////////////////////////////////////////////////////////
# ======================= CONFIRMACIÓN ELIMINAR HÁBITO =======================
def confirmar_eliminacion_habito(ventana_padre, habito):
    confirmacion = tk.Toplevel()
    confirmacion.title("Confirmar eliminación")
    confirmacion.geometry("400x200")
    confirmacion.configure(bg=COLOR_FONDO)

    tk.Label(confirmacion, text="¿Deseas realizar esta acción?", font=("Arial", 16), bg=COLOR_FONDO, fg=COLOR_TEXTO).pack(pady=30)

    botones = tk.Frame(confirmacion, bg=COLOR_FONDO)
    botones.pack(pady=10)

    def eliminar():
        if habito in habitos_activos:
            habitos_activos.remove(habito)
        confirmacion.destroy()
        ventana_padre.destroy()
        mostrar_editor_rutina()

    def cancelar():
        confirmacion.destroy()

    tk.Button(botones, text="Sí", font=("Arial", 14), bg=COLOR_VERDE_SUAVE, fg=COLOR_TEXTO, width=8, command=eliminar).pack(side="left", padx=20)
    tk.Button(botones, text="No", font=("Arial", 14), bg=COLOR_AZUL_SUAVE, fg=COLOR_TEXTO, width=8, command=cancelar).pack(side="right", padx=20)

